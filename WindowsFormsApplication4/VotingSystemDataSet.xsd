<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="VotingSystemDataSet" targetNamespace="http://tempuri.org/VotingSystemDataSet.xsd" xmlns:mstns="http://tempuri.org/VotingSystemDataSet.xsd" xmlns="http://tempuri.org/VotingSystemDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="VotingSystemConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="VotingSystemConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WindowsFormsApplication4.Properties.Settings.GlobalReference.Default.VotingSystemConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="presidentTableAdapter" GeneratorDataComponentClassName="presidentTableAdapter" Name="president" UserDataComponentName="presidentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="VotingSystemConnectionString (Settings)" DbObjectName="dbo.president" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[president] WHERE (([pID] = @Original_pID) AND ([pName] = @Original_pName) AND ([pParty] = @Original_pParty) AND ([image] = @Original_image))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_pID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="pID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_pName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_pParty" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pParty" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_image" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="image" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[president] ([pID], [pName], [pParty], [image]) VALUES (@pID, @pName, @pParty, @image);
SELECT pID, pName, pParty, image FROM president WHERE (pID = @pID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@pID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="pID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@pName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@pParty" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pParty" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@image" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="image" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT pID, pName, pParty, image FROM dbo.president</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[president] SET [pID] = @pID, [pName] = @pName, [pParty] = @pParty, [image] = @image WHERE (([pID] = @Original_pID) AND ([pName] = @Original_pName) AND ([pParty] = @Original_pParty) AND ([image] = @Original_image));
SELECT pID, pName, pParty, image FROM president WHERE (pID = @pID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@pID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="pID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@pName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@pParty" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pParty" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@image" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="image" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_pID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="pID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_pName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_pParty" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="pParty" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_image" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="image" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="pID" DataSetColumn="pID" />
              <Mapping SourceColumn="pName" DataSetColumn="pName" />
              <Mapping SourceColumn="pParty" DataSetColumn="pParty" />
              <Mapping SourceColumn="image" DataSetColumn="image" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="VotingSystemDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="VotingSystemDataSet" msprop:Generator_UserDSName="VotingSystemDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="president" msprop:Generator_TableClassName="presidentDataTable" msprop:Generator_TableVarName="tablepresident" msprop:Generator_TablePropName="president" msprop:Generator_RowDeletingName="presidentRowDeleting" msprop:Generator_RowChangingName="presidentRowChanging" msprop:Generator_RowEvHandlerName="presidentRowChangeEventHandler" msprop:Generator_RowDeletedName="presidentRowDeleted" msprop:Generator_UserTableName="president" msprop:Generator_RowChangedName="presidentRowChanged" msprop:Generator_RowEvArgName="presidentRowChangeEvent" msprop:Generator_RowClassName="presidentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="pID" msprop:Generator_ColumnVarNameInTable="columnpID" msprop:Generator_ColumnPropNameInRow="pID" msprop:Generator_ColumnPropNameInTable="pIDColumn" msprop:Generator_UserColumnName="pID" type="xs:int" />
              <xs:element name="pName" msprop:Generator_ColumnVarNameInTable="columnpName" msprop:Generator_ColumnPropNameInRow="pName" msprop:Generator_ColumnPropNameInTable="pNameColumn" msprop:Generator_UserColumnName="pName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="pParty" msprop:Generator_ColumnVarNameInTable="columnpParty" msprop:Generator_ColumnPropNameInRow="pParty" msprop:Generator_ColumnPropNameInTable="pPartyColumn" msprop:Generator_UserColumnName="pParty">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="image" msprop:Generator_ColumnVarNameInTable="columnimage" msprop:Generator_ColumnPropNameInRow="image" msprop:Generator_ColumnPropNameInTable="imageColumn" msprop:Generator_UserColumnName="image">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:president" />
      <xs:field xpath="mstns:pID" />
    </xs:unique>
  </xs:element>
</xs:schema>